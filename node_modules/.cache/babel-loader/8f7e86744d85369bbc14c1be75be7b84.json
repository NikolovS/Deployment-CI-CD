{"ast":null,"code":"var _jsxFileName = \"/Users/chefo/www/Deployment-CI-CD/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [authenticated, setAuthenticated] = useState(false);\n  const [todoInput, setTodoInput] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    setTimeout(() => {\n      setTodos(prev => [...prev, {\n        id: Math.floor(Math.random() * 1000),\n        title: todoInput,\n        checked: false\n      }]);\n    }, 500);\n    setTodoInput(\"\");\n  };\n\n  const toggleTodo = id => {\n    const filteredTodo = todos.find(todo => todo.id === id);\n    filteredTodo.selected = !filteredTodo.selected;\n    setTodos(todos.map(todo => todo.id === id ? filteredTodo : todo));\n  };\n\n  const deleteTodo = id => setTodos(todos.filter(todo => todo.id !== id));\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!authenticated && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setAuthenticated(true),\n        children: \"Click here to login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), authenticated && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: todoInput,\n          onChange: e => setTodoInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: todos.map(todo => {\n          const {\n            id,\n            title,\n            selected\n          } = todo;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            \"data-cy\": `todo-${title}`,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: selected ? \"todoText\" : null,\n              htmlFor: `todoToggle${id}`,\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              selected: selected,\n              id: `todoToggle${id}`,\n              onChange: () => toggleTodo(id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => deleteTodo(id),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Todos: \", todos.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Todos: \", todos.filter(todo => todo.selected).length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n\n_s(App, \"r9mrEBd4qB6lp1hGsM8a6OJd2Xw=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chefo/www/Deployment-CI-CD/src/App.js"],"names":["useState","App","authenticated","setAuthenticated","todoInput","setTodoInput","todos","setTodos","onSubmit","e","preventDefault","setTimeout","prev","id","Math","floor","random","title","checked","toggleTodo","filteredTodo","find","todo","selected","map","deleteTodo","filter","target","value","length"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCH,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMQ,QAAQ,GAAG,MAAOC,CAAP,IAAa;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AAEAC,IAAAA,UAAU,CAAC,MAAM;AACfJ,MAAAA,QAAQ,CAAEK,IAAD,IAAU,CACjB,GAAGA,IADc,EAEjB;AACEC,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CADN;AAEEC,QAAAA,KAAK,EAAEb,SAFT;AAGEc,QAAAA,OAAO,EAAE;AAHX,OAFiB,CAAX,CAAR;AAQD,KATS,EASP,GATO,CAAV;AAWAb,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,GAfD;;AAiBA,QAAMc,UAAU,GAAIN,EAAD,IAAQ;AACzB,UAAMO,YAAY,GAAGd,KAAK,CAACe,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACT,EAAL,KAAYA,EAAjC,CAArB;AACAO,IAAAA,YAAY,CAACG,QAAb,GAAwB,CAACH,YAAY,CAACG,QAAtC;AAEAhB,IAAAA,QAAQ,CAACD,KAAK,CAACkB,GAAN,CAAWF,IAAD,IAAWA,IAAI,CAACT,EAAL,KAAYA,EAAZ,GAAiBO,YAAjB,GAAgCE,IAArD,CAAD,CAAR;AACD,GALD;;AAOA,QAAMG,UAAU,GAAIZ,EAAD,IAAQN,QAAQ,CAACD,KAAK,CAACoB,MAAN,CAAcJ,IAAD,IAAUA,IAAI,CAACT,EAAL,KAAYA,EAAnC,CAAD,CAAnC;;AAEA,sBACE;AAAA,eACG,CAACX,aAAD,iBACC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,MAAMC,gBAAgB,CAAC,IAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBAFJ,EAUGD,aAAa,iBACZ;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,QAAQ,EAAEM,QAAhB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,OAFL;AAGE,UAAA,KAAK,EAAEJ,SAHT;AAIE,UAAA,QAAQ,EAAGK,CAAD,IAAOJ,YAAY,CAACI,CAAC,CAACkB,MAAF,CAASC,KAAV;AAJ/B;AAAA;AAAA;AAAA;AAAA,gBAHF,eASE;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAeE;AAAA,kBACGtB,KAAK,CAACkB,GAAN,CAAWF,IAAD,IAAU;AACnB,gBAAM;AAAET,YAAAA,EAAF;AAAMI,YAAAA,KAAN;AAAaM,YAAAA;AAAb,cAA0BD,IAAhC;AACA,8BACE;AAAa,uBAAU,QAAOL,KAAM,EAApC;AAAA,oCACE;AACE,cAAA,SAAS,EAAEM,QAAQ,GAAG,UAAH,GAAgB,IADrC;AAEE,cAAA,OAAO,EAAG,aAAYV,EAAG,EAF3B;AAAA,wBAIGI;AAJH;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,QAAQ,EAAEM,QAFZ;AAGE,cAAA,EAAE,EAAG,aAAYV,EAAG,EAHtB;AAIE,cAAA,QAAQ,EAAE,MAAMM,UAAU,CAACN,EAAD;AAJ5B;AAAA;AAAA;AAAA;AAAA,oBAPF,eAaE;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,OAAO,EAAE,MAAMY,UAAU,CAACZ,EAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF,eAgBE;AAAA;AAAA;AAAA;AAAA,oBAhBF;AAAA,aAASA,EAAT;AAAA;AAAA;AAAA;AAAA,kBADF;AAoBD,SAtBA;AADH;AAAA;AAAA;AAAA;AAAA,cAfF,eAyCE;AAAA,oCAAiBP,KAAK,CAACuB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cAzCF,eA0CE;AAAA,uCAAoBvB,KAAK,CAACoB,MAAN,CAAcJ,IAAD,IAAUA,IAAI,CAACC,QAA5B,EAAsCM,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA,cA1CF;AAAA,oBAXJ;AAAA,kBADF;AA2DD;;GA1FuB5B,G;;KAAAA,G","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [authenticated, setAuthenticated] = useState(false);\n  const [todoInput, setTodoInput] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    setTimeout(() => {\n      setTodos((prev) => [\n        ...prev,\n        {\n          id: Math.floor(Math.random() * 1000),\n          title: todoInput,\n          checked: false,\n        },\n      ]);\n    }, 500);\n\n    setTodoInput(\"\");\n  };\n\n  const toggleTodo = (id) => {\n    const filteredTodo = todos.find((todo) => todo.id === id);\n    filteredTodo.selected = !filteredTodo.selected;\n\n    setTodos(todos.map((todo) => (todo.id === id ? filteredTodo : todo)));\n  };\n\n  const deleteTodo = (id) => setTodos(todos.filter((todo) => todo.id !== id));\n\n  return (\n    <>\n      {!authenticated && (\n        <>\n          <h1>Login</h1>\n          <button type=\"button\" onClick={() => setAuthenticated(true)}>\n            Click here to login\n          </button>\n        </>\n      )}\n\n      {authenticated && (\n        <>\n          <h1>Add Todo</h1>\n          <form onSubmit={onSubmit}>\n            <label htmlFor=\"title\">Title</label>\n            <br />\n            <input\n              type=\"text\"\n              id=\"title\"\n              value={todoInput}\n              onChange={(e) => setTodoInput(e.target.value)}\n            />\n            <br />\n            <button type=\"submit\">Submit</button>\n          </form>\n\n          <ul>\n            {todos.map((todo) => {\n              const { id, title, selected } = todo;\n              return (\n                <li key={id} data-cy={`todo-${title}`}>\n                  <label\n                    className={selected ? \"todoText\" : null}\n                    htmlFor={`todoToggle${id}`}\n                  >\n                    {title}\n                  </label>\n                  <input\n                    type=\"checkbox\"\n                    selected={selected}\n                    id={`todoToggle${id}`}\n                    onChange={() => toggleTodo(id)}\n                  />\n                  <button type=\"button\" onClick={() => deleteTodo(id)}>\n                    Remove\n                  </button>\n                  <br />\n                </li>\n              );\n            })}\n          </ul>\n\n          <p>Total Todos: {todos.length}</p>\n          <p>Selected Todos: {todos.filter((todo) => todo.selected).length}</p>\n        </>\n      )}\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}